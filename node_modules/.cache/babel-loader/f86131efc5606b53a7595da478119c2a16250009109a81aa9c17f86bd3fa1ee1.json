{"ast":null,"code":"var _jsxFileName = \"/home/carlos/DEV/Projetos/trivia/sd-027-b-project-trivia-react-redux/src/pages/Game.jsx\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Header from '../components/Header';\nimport { addPoints, addAssertions } from '../redux/actions';\nimport { randomizeAnswers } from '../services/gameFunctions';\nimport '../styles/game.scss';\nimport styles from './Game.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Game extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      questions: [],\n      count: 0,\n      isFetched: false,\n      shuffledAnswers: [],\n      display: false,\n      timeIsUp: false,\n      counter: 30,\n      difficulty: '',\n      assertions: 0\n    };\n    this.counter = () => {\n      const interval = 1000;\n      this.intervalId = setInterval(() => {\n        this.setState(state => {\n          if (state.counter === 1) {\n            this.setState({\n              timeIsUp: true\n            });\n            clearInterval(this.intervalId);\n          }\n          return {\n            counter: state.counter - 1\n          };\n        });\n      }, interval);\n    };\n    this.handleApi = async () => {\n      const {\n        history\n      } = this.props;\n      const token = localStorage.getItem('token');\n      const questions = await fetch(`https://opentdb.com/api.php?amount=5&token=${token}`);\n      const questionsJson = await questions.json();\n      const responseCode = questionsJson.response_code;\n      if (responseCode !== 0) {\n        localStorage.clear();\n        history.push('/');\n      } else {\n        this.setState({\n          questions: questionsJson.results,\n          isFetched: true,\n          shuffledAnswers: randomizeAnswers(questionsJson.results[0]),\n          difficulty: questionsJson.results[0].difficulty\n        });\n      }\n    };\n    this.handleClick = _ref => {\n      let {\n        target: {\n          name\n        }\n      } = _ref;\n      const {\n        difficulty,\n        counter,\n        assertions\n      } = this.state;\n      const {\n        dispatch\n      } = this.props;\n      const base = 10;\n      const modifier = {\n        easy: 1,\n        medium: 2,\n        hard: 3\n      };\n      if (name) {\n        const points = base + counter * modifier[difficulty];\n        dispatch(addPoints(points));\n        this.setState({\n          assertions: assertions + 1\n        }, () => dispatch(addAssertions(assertions)));\n      }\n      this.setState({\n        display: true,\n        timeIsUp: true\n      });\n      clearInterval(this.intervalId);\n    };\n    this.handleNext = () => {\n      const four = 4;\n      const {\n        history\n      } = this.props;\n      const {\n        count,\n        questions\n      } = this.state;\n      if (count === four) {\n        history.push('/feedback');\n      } else {\n        this.setState({\n          shuffledAnswers: randomizeAnswers(questions[count + 1]),\n          difficulty: questions[count + 1].difficulty,\n          count: count + 1,\n          counter: 30,\n          display: false,\n          timeIsUp: false\n        });\n        this.counter();\n      }\n    };\n  }\n  componentDidMount() {\n    this.handleApi();\n    this.setState({\n      display: false\n    });\n    this.counter();\n  }\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n  render() {\n    const {\n      questions,\n      count,\n      isFetched,\n      shuffledAnswers,\n      display,\n      timeIsUp,\n      counter\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), counter, isFetched && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          \"data-testid\": \"question-category\",\n          children: questions[count].category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          \"data-testid\": \"question-text\",\n          children: questions[count].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-testid\": \"answer-options\",\n          id: \"answer-options\",\n          children: shuffledAnswers.answers.map((element, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: timeIsUp || display,\n            name: shuffledAnswers.correct === index && 'correct',\n            \"data-testid\": shuffledAnswers.correct === index ? 'correct-answer' : `wrong-answer-${index}`,\n            onClick: this.handleClick,\n            className: display ? timeIsUp && (shuffledAnswers.correct === index ? styles.correctButton : styles.wrongButton) : 'answer-button',\n            children: element\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-testid\": (timeIsUp || display) && 'btn-next',\n        className: timeIsUp || display ? styles.nextButton : styles.hiddenButton,\n        type: \"button\",\n        onClick: this.handleNext,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this);\n  }\n}\nGame.propTypes = {\n  dispatch: PropTypes.func,\n  history: PropTypes.shape({\n    push: PropTypes.func\n  })\n}.isRequired;\nconst mapStateToProps = state => ({\n  score: state.player.score,\n  assertions: state.player.assertions\n});\nexport default connect(mapStateToProps)(Game);","map":{"version":3,"names":["PropTypes","React","Component","connect","Header","addPoints","addAssertions","randomizeAnswers","styles","Game","state","questions","count","isFetched","shuffledAnswers","display","timeIsUp","counter","difficulty","assertions","interval","intervalId","setInterval","setState","clearInterval","handleApi","history","props","token","localStorage","getItem","fetch","questionsJson","json","responseCode","response_code","clear","push","results","handleClick","target","name","dispatch","base","modifier","easy","medium","hard","points","handleNext","four","componentDidMount","componentWillUnmount","render","category","question","answers","map","element","index","correct","correctButton","wrongButton","nextButton","hiddenButton","propTypes","func","shape","isRequired","mapStateToProps","score","player"],"sources":["/home/carlos/DEV/Projetos/trivia/sd-027-b-project-trivia-react-redux/src/pages/Game.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Header from '../components/Header';\nimport { addPoints, addAssertions } from '../redux/actions';\nimport { randomizeAnswers } from '../services/gameFunctions';\nimport '../styles/game.scss';\nimport styles from './Game.module.css';\n\nclass Game extends Component {\n  state = {\n    questions: [],\n    count: 0,\n    isFetched: false,\n    shuffledAnswers: [],\n    display: false,\n    timeIsUp: false,\n    counter: 30,\n    difficulty: '',\n    assertions: 0,\n  };\n\n  componentDidMount() {\n    this.handleApi();\n    this.setState({\n      display: false,\n    });\n    this.counter();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n\n  counter = () => {\n    const interval = 1000;\n    this.intervalId = setInterval(() => {\n      this.setState((state) => {\n        if (state.counter === 1) {\n          this.setState({\n            timeIsUp: true,\n          });\n          clearInterval(this.intervalId);\n        }\n        return {\n          counter: state.counter - 1,\n        };\n      });\n    }, interval);\n  };\n\n  handleApi = async () => {\n    const { history } = this.props;\n    const token = localStorage.getItem('token');\n    const questions = await fetch(`https://opentdb.com/api.php?amount=5&token=${token}`);\n    const questionsJson = await questions.json();\n    const responseCode = questionsJson.response_code;\n\n    if (responseCode !== 0) {\n      localStorage.clear();\n      history.push('/');\n    } else {\n      this.setState({\n        questions: questionsJson.results,\n        isFetched: true,\n        shuffledAnswers: randomizeAnswers(questionsJson.results[0]),\n        difficulty: questionsJson.results[0].difficulty,\n      });\n    }\n  };\n\n  handleClick = ({ target: { name } }) => {\n    const { difficulty, counter, assertions } = this.state;\n    const { dispatch } = this.props;\n    const base = 10;\n    const modifier = {\n      easy: 1,\n      medium: 2,\n      hard: 3,\n    };\n    if (name) {\n      const points = base + (counter * modifier[difficulty]);\n      dispatch(addPoints(points));\n      this.setState({\n        assertions: assertions + 1,\n      }, () => dispatch(addAssertions(assertions)));\n    }\n    this.setState({\n      display: true,\n      timeIsUp: true,\n    });\n    clearInterval(this.intervalId);\n  };\n\n  handleNext = () => {\n    const four = 4;\n    const { history } = this.props;\n    const { count, questions } = this.state;\n    if (count === four) {\n      history.push('/feedback');\n    } else {\n      this.setState({\n        shuffledAnswers: randomizeAnswers(questions[count + 1]),\n        difficulty: questions[count + 1].difficulty,\n        count: count + 1,\n        counter: 30,\n        display: false,\n        timeIsUp: false,\n      });\n      this.counter();\n    }\n  };\n\n  render() {\n    const {\n      questions,\n      count,\n      isFetched,\n      shuffledAnswers,\n      display,\n      timeIsUp,\n      counter,\n    } = this.state;\n    return (\n      <div className=\"game\">\n        <Header />\n        {counter}\n        {isFetched\n          && (\n            <div className=\"question\">\n              <span\n                data-testid=\"question-category\"\n              >\n                {questions[count].category}\n              </span>\n              <span\n                data-testid=\"question-text\"\n              >\n                {questions[count].question}\n              </span>\n              <div\n                data-testid=\"answer-options\"\n                id=\"answer-options\"\n              >\n                {\n                  shuffledAnswers.answers.map((element, index) => (\n                    <button\n                      disabled={ timeIsUp || display }\n                      key={ index }\n                      name={ shuffledAnswers.correct === index\n                        && ('correct') }\n                      data-testid={ shuffledAnswers.correct === index\n                        ? ('correct-answer') : (`wrong-answer-${index}`) }\n                      onClick={ this.handleClick }\n                      className={ display ? (\n                        timeIsUp\n                        && (shuffledAnswers.correct === index\n                          ? styles.correctButton : styles.wrongButton)\n                      ) : 'answer-button' }\n                    >\n                      {element}\n                    </button>\n                  ))\n                }\n              </div>\n            </div>)}\n\n        <button\n          data-testid={ (timeIsUp || display) && 'btn-next' }\n          className={ (timeIsUp || display) ? styles.nextButton : styles.hiddenButton }\n          type=\"button\"\n          onClick={ this.handleNext }\n        >\n          Next\n\n        </button>\n\n      </div>\n    );\n  }\n}\n\nGame.propTypes = {\n  dispatch: PropTypes.func,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }),\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  score: state.player.score,\n  assertions: state.player.assertions,\n});\n\nexport default connect(mapStateToProps)(Game);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}